{
  "author": "Human Connectome Project",
  "cite": "Glasser M. F., Sotiropoulos S. N., Wilson J. A., Coalson T. S., Fischl B., Andersson J. L., … Consortium, W. U.-M. H. (2013). The minimal preprocessing pipelines for the Human Connectome Project. NeuroImage, 80, 105–124.",
  "command": "/flywheel/v0/run.py",
  "config": {
    "aseg_csv": {
      "default": true,
      "description": "Write aseg stats to a csv file and analysis metadata.",
      "type": "boolean"
    },
    "avgrdcmethod_struct": {
      "default": "SiemensFieldMap",
      "description": "Select distortion correction method that corresponds with the types of collected fieldmaps. GE fieldmaps not currently supported.",
      "enum": [
        "SiemensFieldMap",
        "TOPUP",
        "NONE"
      ],
      "type": "string"
    },
    "bias_correction_func": {
      "default": "NONE",
      "description": "Bias-field estimation method. 'NONE'(default),'SEBASED', or 'Legacy'. 'SEBASED'=Estimate from SpinEchoFieldMap (only possible with both Pos and Neg SpinEcho), 'Legacy'=Estimate from structural scans (only valid if structural collected in the same session, and without any subject movement)",
      "enum": [
        "NONE",
        "SEBASED",
        "Legacy"
      ],
      "type": "string"
    },
    "brain_size": {
      "default": 150,
      "description": "Brain size in mm (in Superior-Inferior axis), typically 150 (default) for adults",
      "type": "integer"
    },
    "debug": {
      "default": false,
      "description": "Add additional debug level messages to log output?",
      "type": "boolean"
    },
    "dof_diff": {
      "default": 6,
      "description": "Degrees of freedom for Diffusion->Anat registration. 6 (default) = rigid body, when all data is from same scanner. 12 = full affine, recommended for 7T fMRI->3T anatomy",
      "enum": [
        6,
        12
      ],
      "type": "integer"
    },
    "dof_func": {
      "default": 6,
      "description": "Degrees of freedom for fMRI->Anat registration. 6 (default) = rigid body, when all data is from same scanner. 12 = full affine, recommended for 7T fMRI->3T anatomy",
      "enum": [
        6,
        12
      ],
      "type": "integer"
    },
    "dwi_name_out": {
      "default": "diffusion",
      "description": "Output name for preprocessed data. *Note: Spaces will be replaced with '_'.",
      "type": "string"
    },
    "gear_abort_on_bids_error": {
      "default": false,
      "description": "Terminate gear if BIDS errors are encountered. (No output will be generated.)",
      "type": "boolean"
    },
    "gear_dry_run": {
      "default": false,
      "description": "Log all commands, but do not execute.",
      "type": "boolean"
    },
    "gear_run_bids_validation": {
      "default": false,
      "description": "Run BIDS validator prior to attempting analysis.",
      "type": "boolean"
    },
    "gear_save_on_error": {
      "default": false,
      "description": "Set to 'True' to save output on error.",
      "type": "boolean"
    },
    "mctype_func": {
      "default": "MCFLIRT",
      "description": "Motion correction algorithm. Use 'MCFLIRT' (standard FSL moco) for most acquisitions.  'FLIRT'=custom algorithm used by HCP3T internally, but not recommended for public use",
      "enum": [
        "MCFLIRT",
        "FLIRT"
      ],
      "type": "string"
    },
    "reg_name": {
      "default": "MSMSulc",
      "description": "Surface registration type: either 'FS' (freesurfer) or 'MSMSulc' (HCP default)",
      "enum": [
        "MSMSulc",
        "FS"
      ],
      "type": "string"
    },
    "run_label": {
      "description": "[RUN_LABEL [RUN_LABEL ...]] Do not include 'run-', when listing the specific task to include. If left blank, will analyze all runs.",
      "optional": true,
      "type": "string"
    },
    "session_label": {
      "description": "[SESSION_LABEL [SESSION_LABEL ...]] Do not include 'ses-', when listing the specific session to include. If left blank, will run on all sessions.",
      "optional": true,
      "type": "string"
    },
    "stages": {
      "default": "PreFreeSurfer FreeSurfer PostFreeSurfer fMRIVolume fMRISurface Diffusion",
      "description": "Space-separated list of processes to run, e.g., [PostFreeSurfer fMRIVolume Diffusion]",
      "type": "string"
    },
    "stats_only_struct": {
      "default": false,
      "description": "If hcpstruct_zip is available because of previous, valid run, skip straight to the aseg.csv creation. (No FreeSurfer/PostFreeSurfer processing.)",
      "type": "boolean"
    },
    "subject": {
      "description": "Subject ID (use to override session subject id)",
      "optional": true,
      "type": "string"
    },
    "task_label": {
      "description": "[TASK_LABEL [TASK_LABEL ...]] Do not include 'task-', when listing the specific task to include. If left blank, will run all tasks.",
      "optional": true,
      "type": "string"
    },
    "template_size": {
      "default": "1mm",
      "description": "Voxel size of HCP anatomical template. Best if matches input. (Options = 0.7mm, 0.8mm (default), 1mm)",
      "type": "string"
    },
    "temporal_filter": {
      "description": "HCP default is 200. Change value, if another is desired.",
      "max": 10000,
      "min": 0,
      "optional": true,
      "type": "integer"
    },
    "unwarp_dir_struct": {
      "default": "z",
      "description": "Readout direction for structural scans ( 'x', 'x-', 'y', 'y-', 'z', 'z-' ). HCP default = 'z'",
      "enum": [
        "x",
        "x-",
        "y",
        "y-",
        "z",
        "z-"
      ],
      "type": "string"
    }
  },
  "custom": {
    "flywheel": {
      "suite": "Human Connectome Project"
    },
    "gear-builder": {
      "category": "analysis",
      "image": "flywheel/bids-hcp:1.2.5_4.3.0_rc1"
    }
  },
  "description": "Runs the preprocessing steps of the Human Connectome Project Minimal Preprocessing Pipeline, described in Glasser et al. 2013. Currently this includes v4.3.0 release of PreFreeSurfer, FreeSurfer, and PostFreeSurfer pipelines. This Gear also generates some helpful QC images.",
  "environment": {
    "CARET7DIR": "/opt/workbench/bin_linux64",
    "FLYWHEEL": "/flywheel/v0",
    "FMRI_ANALYSIS_DIR": "/opt/freesurfer/fsfast",
    "FREESURFER_HOME": "/opt/freesurfer",
    "FSFAST_HOME": "/opt/freesurfer/fsfast",
    "FSF_OUTPUT_FORMAT": "nii.gz",
    "FSLDIR": "/usr/share/fsl",
    "FSLMULTIFILEQUIT": "TRUE",
    "FSLOUTPUTTYPE": "NIFTI_GZ",
    "FSLTCLSH": "/usr/bin/tclsh",
    "FSLWISH": "/usr/bin/wish",
    "FSL_DIR": "/usr/share/fsl",
    "FSL_PYTHON": "${FSLDIR}/fslpython/envs/fslpython",
    "FS_OVERRIDE": "0",
    "HCPPIPEDIR": "/opt/HCP-Pipelines",
    "HCPPIPEDIR_Bin": "/opt/HCP-Pipelines/global/binaries",
    "HCPPIPEDIR_Config": "/opt/HCP-Pipelines/global/config",
    "HCPPIPEDIR_FS": "/opt/HCP-Pipelines/FreeSurfer/scripts",
    "HCPPIPEDIR_Global": "/opt/HCP-Pipelines/global/scripts",
    "HCPPIPEDIR_PostFS": "/opt/HCP-Pipelines/PostFreeSurfer/scripts",
    "HCPPIPEDIR_PreFS": "/opt/HCP-Pipelines/PreFreeSurfer/scripts",
    "HCPPIPEDIR_Templates": "/opt/HCP-Pipelines/global/templates",
    "HCPPIPEDIR_dMRI": "/opt/HCP-Pipelines/DiffusionPreprocessing/scripts",
    "HCPPIPEDIR_dMRITract": "/opt/HCP-Pipelines/DiffusionTractography/scripts",
    "HCPPIPEDIR_fMRIVol": "/opt/HCP-Pipelines/fMRIVolume/scripts",
    "HCPPIPEDIR_tfMRI": "/opt/HCP-Pipelines/tfMRI/scripts",
    "HCPPIPEDIR_tfMRIAnalysis": "/opt/HCP-Pipelines/TaskfMRIAnalysis/scripts",
    "LD_LIBRARY_PATH": "/usr/share/fsl/lib:/usr/share/fsl/lib",
    "LOCAL_DIR": "/opt/freesurfer/local",
    "MINC_BIN_DIR": "/opt/freesurfer/mni/bin",
    "MINC_LIB_DIR": "/opt/freesurfer/mni/lib",
    "MNI_DATAPATH": "/opt/freesurfer/mni/data",
    "MNI_DIR": "/opt/freesurfer/mni",
    "MNI_PERL5LIB": "/opt/freesurfer/mni/lib/perl5/5.8.5",
    "MSMBINDIR": "/opt/HCP-Pipelines/MSMBinaries",
    "MSMBin": "/opt/HCP-Pipelines/MSMBinaries",
    "MSMCONFIGDIR": "/opt/HCP-Pipelines/MSMConfig",
    "PATH": "/opt/poetry/bin:/opt/workbench/bin_linux64:/opt/venv/bin:/opt/freesurfer/bin:/opt/freesurfer/fsfast/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/share/fsl/bin:/opt/freesurfer/tktools:/opt/freesurfer/mni/bin",
    "PERL5LIB": "/opt/freesurfer/mni/lib/perl5/5.8.5",
    "POETRY_HOME": "/opt/poetry",
    "POSSUMDIR": "/usr/share/fsl",
    "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
    "SUBJECTS_DIR": "/opt/freesurfer/subjects",
    "WORKBENCH": "/opt/workbench/wb_command",
    "python3": "/opt/venv/bin/python3.9"
  },
  "inputs": {
    "FreeSurferLicense": {
      "base": "file",
      "description": "FreeSurfer license.txt file",
      "optional": true
    },
    "api-key": {
      "base": "api-key"
    },
    "bidsignore": {
      "base": "file",
      "description": "A .bidsignore file to provide to the bids-validator that this gear runs before running the main command.",
      "optional": true
    },
    "gdcoeffs": {
      "base": "file",
      "description": "Path to gradient coefficients file",
      "optional": true
    },
    "hcpstruct_zip": {
      "base": "file",
      "description": "Path to previous HCP Structural analysis files. Req'd if completing func and/or diff stages only.",
      "optional": true
    }
  },
  "label": "BIDS-HCP Preprocessing Pipeline",
  "license": "Other",
  "maintainer": "Flywheel <support@flywheel.io>",
  "name": "bids-hcp",
  "source": "https://gitlab.com/flywheel-io/flywheel-apps/bids-hcp",
  "url": "https://github.com/Washington-University/Pipelines",
  "version": "1.2.5_4.3.0_rc1"
}

{
  "author": "Craddock C, Sikka S, Cheung B, et al.",
  "command": "python3.9 /flywheel/v0/run.py",
  "config": {
    "debug": {
      "default": false,
      "type": "boolean"
    },
    "gear-dry-run": {
      "default": false,
      "description": "Go through all the setup steps, but don't run any analysis",
      "type": "boolean"
    },
    "gear-save-output-on-error": {
      "default": false,
      "description": "Save the contents of the working directory to output on failure (can be large).",
      "type": "boolean"
    },
    "mem_gb": {
      "default": 0,
      "description": "Amount of RAM available to the pipeline in megabytes. If this is specified along with mem_mb, this flag will take precedence.d (==0: Use default of 6 GB).",
      "type": "number"
    },
    "mem_mb": {
      "default": 0,
      "description": "Amount of RAM available to the pipeline in megabytes. Included for compatibility with BIDS-Apps standard, but mem_gb is preferred (==0: Use default of 6 GB).",
      "type": "number"
    },
    "n_cpus": {
      "default": 0,
      "description": "Number of execution resources available for the pipeline(==0: Use default).",
      "type": "integer"
    },
    "preconfig": {
      "description": "Name of pre-configured pipeline to run.",
      "enum": [
        "anat-only",
        "benchmark-ANTS",
        "benchmark-FNIRT",
        "default",
        "default-deprecated",
        "fmriprep-options",
        "ndmg",
        "preproc",
        "rbc-options",
        "monkey"
      ],
      "optional": true,
      "type": "string"
    },
    "random_seed": {
      "description": "Positive integer to fix the state of the execution.",
      "minimum": 0,
      "optional": true,
      "type": "number"
    },
    "save_working_dir": {
      "default": false,
      "description": "Save the contents of the working directory.",
      "type": "boolean"
    },
    "seed_based_correlation_analysis_type": {
      "description": "Analysis type for SCA. See https://github.com/FCP-INDI/C-PAC/blob/main/dev/docker_data/default_pipeline.yml#L1547 for acceptable combinations.",
      "enum": [
        "Avg",
        "DualReg",
        "MultReg"
      ],
      "optional": true,
      "type": "string"
    },
    "seed_based_correlation_atlas": {
      "description": "Target atlas for the seed-based correlation. Must specify an input ROI and analysis type.",
      "enum": [
        "/cpac_templates/PNAS_Smith09_rsn10.nii.gz",
        "/cpac_templates/CC400.nii.gz",
        "/cpac_templates/ez_mask_pad.nii.gz",
        "/cpac_templates/aal_mask_pad.nii.gz",
        "/cpac_templates/CC200.nii.gz",
        "/cpac_templates/tt_mask_pad.nii.gz",
        "/cpac_templates/ho_mask_pad.nii.gz",
        "/cpac_templates/rois_3mm.nii.gz"
      ],
      "optional": true,
      "type": "string"
    },
    "skip_bids_validator": {
      "default": false,
      "description": "Skips BIDS validation",
      "type": "boolean"
    },
    "test_config": {
      "default": false,
      "description": "test_config will run through the entire configuration process but will not execute the pipeline",
      "type": "boolean"
    },
    "tracking_opt-out": {
      "default": true,
      "description": "Disable usage tracking. Only the number of participants on the analysis is tracked.",
      "type": "boolean"
    }
  },
  "custom": {
    "flywheel": {
      "classification": {
        "components": [
          "FSL",
          "ANTS",
          "fmriprep"
        ],
        "keywords": [
          "neuroimaging",
          "pipeline"
        ],
        "modality": [
          "MR"
        ],
        "type": [
          "NIFTI"
        ]
      },
      "suite": "Image Processing - Other"
    },
    "gear-builder": {
      "category": "analysis",
      "image": "flywheel/cpac:0.3.2_1.8.5"
    }
  },
  "description": "The Configurable Pipeline for the Analysis of Connectomes.  C-PAC is software for performing high-throughput preprocessing and analysis of functional connectomes data using high-performance computers. C-PAC is implemented in Python using the Nipype pipelining library to efficiently combine tools from AFNI, ANTS, and FSL to achieve high quality and robust automated processing. This docker container, when built, is an application for performing participant level analyses. Future releases will include group-level analyses, when there is a BIDS standard for handling derivatives and group models.",
  "environment": {
    "ANTSPATH": "/usr/lib/ants",
    "C3DPATH": "/opt/c3d",
    "FREESURFER_HOME": "/usr/lib/freesurfer",
    "FSLDIR": "/usr/share/fsl/5.0",
    "FSLMULTIFILEQUIT": "TRUE",
    "FSLOUTPUTTYPE": "NIFTI_GZ",
    "FSLTCLSH": "/usr/bin/tclsh",
    "FSLWISH": "/usr/bin/wish",
    "LD_LIBRARY_PATH": "/usr/lib/fsl/5.0",
    "PATH": "/usr/local/miniconda/bin:/usr/lib/freesurfer/bin:/usr/lib/freesurfer/fsfast/bin:/usr/lib/freesurfer/tktools:/usr/share/fsl/5.0/bin:/usr/lib/fsl/5.0:/usr/lib/freesurfer/mni/bin:/opt/poetry/bin:/opt/venv/bin:/usr/lib/freesurfer/bin:/usr/local/miniconda/bin:/opt/ICA-AROMA:/usr/lib/ants:/opt/afni:/opt/c3d/bin:/root/.nvm/versions/node/v11.15.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
    "POETRY_HOME": "/opt/poetry",
    "POSSUMDIR": "/usr/share/fsl/5.0",
    "python": "/usr/local/miniconda/bin/python"
  },
  "inputs": {
    "ROI_file_for_SCA": {
      "base": "file",
      "description": "ROI to use for seed-based connectivity analysis.",
      "optional": true,
      "type": {
        "enum": [
          "nifti"
        ]
      }
    },
    "api-key": {
      "base": "api-key",
      "read-only": true
    },
    "pipeline_file": {
      "base": "file",
      "description": "NOT THE DATASET; An optional custom pipeline file (yaml)",
      "optional": true
    }
  },
  "label": "BIDS-APP: C-PAC (Configurable Pipeline for the Analysis of Connectomes)",
  "license": "Apache-2.0",
  "maintainer": "Flywheel <support@flywheel.io>",
  "name": "cpac",
  "source": "https://gitlab.com/flywheel-io/flywheel-apps/cpac",
  "url": "https://gitlab.com/flywheel-io/flywheel-apps/cpac",
  "version": "0.3.2_1.8.5"
}

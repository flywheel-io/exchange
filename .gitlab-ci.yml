include:
  - project: flywheel-io/scientific-solutions/etc/sse-qa-ci
    ref: ef4fcd765545acc32720a78cdd12f5819243ee1a
    file: ci/gear-exchange.yml

variables:
  CACHE_KEY: cache
  CACHE_CLEAR: ""

publish:exchange-docker:
  extends: .publish:exchange-docker
  cache:
    key: $CACHE_KEY
    paths: [ .cache ]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "GEAR-2518-exchange-CI-plugin"
#      when: always
#    - if: $CI_PIPELINE_SOURCE =~ /^(merge_request_event|web|api)$/ &&
#        $MANIFEST_VAL==""

  script:
    - /qa-ci/scripts/run.sh job git_login
    - git diff --name-only --diff-filter=d 51e0d1d728b9efeff4b00e32fcc97722e2869582
    - ./bin/process-manifests-mod.sh
#    # TODO expecting flywheel/poetry-cow-says:x.x.x format
#    # - MANIFEST_NAME="${CI_MERGE_REQUEST_TITLE}"
#    - MANIFEST_VAL="flywheel/fw-test-analysis:1.0.0"
#    - MANIFEST_NAME_VR="${MANIFEST_VAL#*/}"
#    - MANIFEST_NAME="${MANIFEST_NAME_VR%%:*}"
#    - MANIFEST_SLUG="${MANIFEST_NAME//\//-}"
#    # TODO this will be revised
#    - |-
#      GEAR_VERSION=$(jq -r .version \
#      gears/flywheel/${MANIFEST_NAME##*/}.json | \
#      sed 's/_.*//')
#    - GCP_IMG_PREFIX="us-docker.pkg.dev/flywheel-exchange/gear-exchange"
#    - |-
#      IMAGE_NAME="${GCP_IMG_PREFIX}/${MANIFEST_NAME_VR}"
#    # - echo ${MANIFEST_NAME}:${GEAR_VERSION}
#    - docker pull flywheel/${MANIFEST_NAME_VR}
#    - |-
#      docker tag flywheel/${MANIFEST_NAME_VR} \
#      ${IMAGE_NAME}
#    - |-
#      docker push \
#      ${IMAGE_NAME}
#    - |-
#      DIGEST_VAL=$(gcloud container images describe \
#      $IMAGE_NAME \
#      --format='value(image_summary.digest)' | grep -oP '[a-f0-9]{64}')
#    # TODO this will be revised
#    - |-
#      INVOCATION_SCHEMA=$( python \
#      bin/generate_invocation_schema.py \
#      gears/flywheel/${MANIFEST_NAME}.json )
#    - echo ${INVOCATION_SCHEMA}
#    - SHASUM="sha256:${DIGEST_VAL}"
#    - V_MANIFEST_NAME="${MANIFEST_SLUG}-sha256-${DIGEST_VAL}"
#    - GIT_COMMIT_CURRENT=$( git rev-parse HEAD )
#    - MANIFEST_HIER="/${MANIFEST_NAME}"
#    - MANIFEST_HIER="${MANIFEST_HIER%/*}"
#    - MANIFEST_DIR="manifests/temp_manifest_dir"
#    - mkdir -p ${MANIFEST_DIR}
#    - V_MANIFEST_PATH="${MANIFEST_DIR}/${V_MANIFEST_NAME}.json"
#    - echo ${V_MANIFEST_PATH}
#    - |-
#      LATEST_MERGED_BRANCH=$(echo "$CI_COMMIT_TITLE" \
#      | sed -n "s/Merge branch '\(.*\)' into '\(.*\)'/\1/p")
#    - tempdir=$( mktemp -d )
#    - tempfile=$tempdir/tempfile
#    - |
#      jq "{\"gear\": .}" gears/flywheel/${MANIFEST_NAME}.json > $V_MANIFEST_PATH
#    - |
#      jq ".exchange.\"git-commit\" = \"$GIT_COMMIT_CURRENT\"" $V_MANIFEST_PATH \
#      > $tempfile && mv $tempfile $V_MANIFEST_PATH
#    - |
#      jq ".exchange.\"rootfs-hash\" = \"$SHASUM\" | \
#      .exchange.\"image-name\" = \"$IMAGE_NAME\"" $V_MANIFEST_PATH \
#      > $tempfile && mv $tempfile $V_MANIFEST_PATH
#    - |
#      jq --argjson content "$(cat $INVOCATION_SCHEMA)" \
#      '.["invocation-schema"] = $content' $V_MANIFEST_PATH \
#      > $tempfile && mv $tempfile $V_MANIFEST_PATH
#    - cat $V_MANIFEST_PATH
#    - /qa-ci/scripts/run.sh job git_login
#    - git remote --verbose
#    - |-
#      git remote set-url origin \
#      https://$CI_PUSH_USER_NAME:$CI_PUSH_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
#    - git remote --verbose
##    - git config --global user.name "$CI_PUSH_USER_NAME"
##    - git config --global user.email "$CI_PUSH_USER_EMAIL"
#    - git status
#    - git branch -al
#    - git fetch --unshallow
#    - git branch -D $CI_COMMIT_REF_NAME &>/dev/null || true
#    - git checkout "$CI_COMMIT_REF_NAME"
#    - git pull origin $CI_COMMIT_REF_NAME; \
#    - |-
#      if git status --porcelain | grep -E '^(A|M|\?\?)'; then \
#      git add .; \
#      git commit -m "Auto-commit by CI/CD"; \
#      git pull origin $CI_COMMIT_REF_NAME; \
#      git push origin $CI_COMMIT_REF_NAME -vvv; \
#      fi
